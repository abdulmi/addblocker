interset_repo_events_t3_csv.sources = dirSource
interset_repo_events_t3_csv.channels = memChannel
interset_repo_events_t3_csv.sinks = kafkaSink
interset_repo_events_t3_csv.sources.dirSource.type = com.interset.flume.source.directory.SpoolDirectorySource
interset_repo_events_t3_csv.sources.dirSource.spoolDir = /ingestt3repo
interset_repo_events_t3_csv.sources.dirSource.interceptors = logger repoCsvInterceptor deRepoToAvro
interset_repo_events_t3_csv.sources.dirSource.interceptors.logger.type = com.interset.flume.interceptor.LoggingInterceptor$Builder
interset_repo_events_t3_csv.sources.dirSource.interceptors.repoCsvInterceptor.type = com.interset.flume.interceptor.logerator.GenericRepoInterceptor$Builder
interset_repo_events_t3_csv.sources.dirSource.interceptors.repoCsvInterceptor.csvFormat = _,_,_,TIMESTAMP,_,_,USER,_,_,CLIENT_IP,_,_,_,ACTION,PROJECT,_
interset_repo_events_t3_csv.sources.dirSource.interceptors.deRepoToAvro.type = com.interset.flume.interceptor.avro.DictionaryEventToAvroRepositoryRecord$Builder
interset_repo_events_t3_csv.channels.memChannel.type = memory
interset_repo_events_t3_csv.channels.memChannel.capacity = 100000
interset_repo_events_t3_csv.channels.memChannel.transactionCapacity = 10000
interset_repo_events_t3_csv.sinks.kafkaSink.type = org.apache.flume.sink.kafka.KafkaSink
interset_repo_events_t3_csv.sinks.kafkaSink.brokerList = qa-datanode5.interset.com:6667
interset_repo_events_t3_csv.sinks.kafkaSink.topic = interset_repo_events_0_t3
interset_repo_events_t3_csv.sinks.kafkaSink.kafka.topic.metadata.refresh.interval.ms = 1000
interset_repo_events_t3_csv.sources.dirSource.channels = memChannel
interset_repo_events_t3_csv.sinks.kafkaSink.channel = memChannel
interset_repo_events_t3_es.sources = kafkaSource
interset_repo_events_t3_es.channels = memoryChannel
interset_repo_events_t3_es.sinks = esSink
interset_repo_events_t3_es.sources.kafkaSource.type = org.apache.flume.source.kafka.KafkaSource
interset_repo_events_t3_es.sources.kafkaSource.zookeeperConnect = qa-datanode5.interset.com:2181
interset_repo_events_t3_es.sources.kafkaSource.topic = interset_repo_events_0_t3
interset_repo_events_t3_es.sources.kafkaSource.groupId = interset_repo_events_0_t3_es_group
interset_repo_events_t3_es.sources.kafkaSource.batchSize = 1000
interset_repo_events_t3_es.sources.kafkaSource.kafka.auto.offset.reset = smallest
interset_repo_events_t3_es.sources.kafkaSource.interceptors = avroBytesToDe
interset_repo_events_t3_es.sources.kafkaSource.interceptors.avroBytesToDe.type = com.interset.flume.interceptor.avro.AvroBytesToDictionaryEvent$Builder
interset_repo_events_t3_es.sources.kafkaSource.interceptors.avroBytesToDe.recordType = com.interset.schema.RepositoryRecord
interset_repo_events_t3_es.channels.memoryChannel.type = memory
interset_repo_events_t3_es.channels.memoryChannel.capacity = 10000
interset_repo_events_t3_es.channels.memoryChannel.transactionCapacity = 1000
interset_repo_events_t3_es.sinks.esSink.type = org.apache.flume.sink.elasticsearch.ElasticSearchSink
interset_repo_events_t3_es.sinks.esSink.batchSize = 1000
interset_repo_events_t3_es.sinks.esSink.indexType = repo
interset_repo_events_t3_es.sinks.esSink.hostNames = qa-clientnode5.interset.com:9300
interset_repo_events_t3_es.sinks.esSink.clusterName = interset
interset_repo_events_t3_es.sinks.esSink.indexName = interset_repo_rawdata_t3
interset_repo_events_t3_es.sinks.esSink.serializer = com.interset.flume.elasticsearch.sink.ElasticSearchSerializer
interset_repo_events_t3_es.sinks.esSink.serializer.indexType = repo
interset_repo_events_t3_es.sinks.esSink.serializer.toRotate = true
interset_repo_events_t3_es.sinks.esSink.serializer.hostNames = qa-clientnode5.interset.com:9300
interset_repo_events_t3_es.sinks.esSink.serializer.clusterName = interset
interset_repo_events_t3_es.sinks.esSink.serializer.indexName = interset_repo_rawdata_t3
interset_repo_events_t3_es.sources.kafkaSource.channels = memoryChannel
interset_repo_events_t3_es.sinks.esSink.channel = memoryChannel
interset_repo_events_t3_hbase.sources = kafkaSource
interset_repo_events_t3_hbase.channels = memoryChannel
interset_repo_events_t3_hbase.sinks = hbaseSink
interset_repo_events_t3_hbase.sources.kafkaSource.type = org.apache.flume.source.kafka.KafkaSource
interset_repo_events_t3_hbase.sources.kafkaSource.zookeeperConnect = qa-datanode5.interset.com:2181
interset_repo_events_t3_hbase.sources.kafkaSource.topic = interset_repo_events_0_t3
interset_repo_events_t3_hbase.sources.kafkaSource.groupId = interset_repo_events_0_t3_hbase_group
interset_repo_events_t3_hbase.sources.kafkaSource.batchSize = 1000
interset_repo_events_t3_hbase.sources.kafkaSource.kafka.auto.offset.reset = smallest
interset_repo_events_t3_hbase.channels.memoryChannel.type = memory
interset_repo_events_t3_hbase.channels.memoryChannel.capacity = 10000
interset_repo_events_t3_hbase.channels.memoryChannel.transactionCapacity = 1000
interset_repo_events_t3_hbase.sinks.hbaseSink.type = asynchbase
interset_repo_events_t3_hbase.sinks.hbaseSink.zookeeperQuorum = qa-datanode5.interset.com:2181
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer.tenantID = t3
interset_repo_events_t3_hbase.sinks.hbaseSink.table = OBSERVED_ENTITY_RELATION_MINUTELY_COUNTS
interset_repo_events_t3_hbase.sinks.hbaseSink.columnFamily = 0
interset_repo_events_t3_hbase.sinks.hbaseSink.coalesceIncrements = true
interset_repo_events_t3_hbase.sinks.hbaseSink.znodeParent = /hbase-unsecure
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer = com.interset.flume.hbase.sink.AsyncRepoMetricsSerializer
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer.dataInstance = 0
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer.incrementColumn = COUNTS
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer.bucketms = 60000
interset_repo_events_t3_hbase.sinks.hbaseSink.serializer.saltBuckets = 16
interset_repo_events_t3_hbase.sources.kafkaSource.channels = memoryChannel
interset_repo_events_t3_hbase.sinks.hbaseSink.channel = memoryChannel